"use strict";
/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.4.1
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-ts code generator program.
 * https://github.com/DestinyItemManager/bungie-api-ts
 * Do not edit these files manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var OAuthApplicationType;
(function (OAuthApplicationType) {
    OAuthApplicationType[OAuthApplicationType["None"] = 0] = "None";
    /**
     * Indicates the application is server based and can keep its secrets from end
     * users and other potential snoops.
     */
    OAuthApplicationType[OAuthApplicationType["Confidential"] = 1] = "Confidential";
    /**
     * Indicates the application runs in a public place, and it can't be trusted to
     * keep a secret.
     */
    OAuthApplicationType[OAuthApplicationType["Public"] = 2] = "Public";
})(OAuthApplicationType = exports.OAuthApplicationType || (exports.OAuthApplicationType = {}));
var ApplicationStatus;
(function (ApplicationStatus) {
    /** No value assigned */
    ApplicationStatus[ApplicationStatus["None"] = 0] = "None";
    /**
     * Application exists and works but will not appear in any public catalog. New
     * applications start in this state, test applications will remain in this state.
     */
    ApplicationStatus[ApplicationStatus["Private"] = 1] = "Private";
    /** Active applications that can appear in an catalog. */
    ApplicationStatus[ApplicationStatus["Public"] = 2] = "Public";
    /**
     * Application disabled by the owner. All authorizations will be treated as
     * terminated while in this state. Owner can move back to private or public state.
     */
    ApplicationStatus[ApplicationStatus["Disabled"] = 3] = "Disabled";
    /**
     * Application has been blocked by Bungie. It cannot be transitioned out of this
     * state by the owner. Authorizations are terminated when an application is in this
     * state.
     */
    ApplicationStatus[ApplicationStatus["Blocked"] = 4] = "Blocked";
})(ApplicationStatus = exports.ApplicationStatus || (exports.ApplicationStatus = {}));
var DeveloperRole;
(function (DeveloperRole) {
    DeveloperRole[DeveloperRole["None"] = 0] = "None";
    DeveloperRole[DeveloperRole["Owner"] = 1] = "Owner";
    DeveloperRole[DeveloperRole["TeamMember"] = 2] = "TeamMember";
})(DeveloperRole = exports.DeveloperRole || (exports.DeveloperRole = {}));
